# This file is derived from original source at:
# https://github.com/modusbox/connection-manager-api/blob/873ed4b86e8592b2234d02f2300e9a0e736f168f/.github/workflows/publish_docker.yml
# The license is duplicated verbatim in the LICENSE file in this directory.

# TODO: create a tag/release with the version based on the version in Cargo.toml every time a merge
# is made to master? Prevent any merges to master without a code change? (That's probably tricky-
# what to do about documentation changes etc.? Perhaps build the container image, see if the
# checksum is the same as the existing one, and prevent pushes to master that change the container
# checksum without changing the Cargo.toml version?).

name: Publish image

on:
  # The build will run on all of the following event types. Semver tagged images will be published
  # for a release. A long sha image will be published for every push.
  release:
    types: [published]
  push:
    branches:
    - '**'
  pull_request:

jobs:
  main:
    runs-on: ubuntu-latest
    steps:
    -
      name: Checkout
      uses: actions/checkout@v2
    -
      name: Docker meta
      id: docker_meta
      uses: docker/metadata-action@v3
      with:
        # Except for Dockerhub, which is the default, tags need to have the registry name in
        # them, e.g. ghcr.io for Github container registry, or gcr.io for Google container
        # registry.
        # Note that the generated tags will look like:
        #   ghcr.io/{owner}/{repo}:version
        images: ghcr.io/${{ github.repository }}
        # For a release v1.2.3, we'll produce the following image tags
        #   v1.2.3
        #   1.2.3
        #   1.2
        #   latest
        # For non-releases, we'll produce a long sha
        # Semver pre-release versions are also supported
        # See also:
        # https://github.com/crazy-max/ghaction-docker-meta/tree/0a412843f87333854fa03a809b74056b64c6f31a#handle-semver-tag
        flavor: |
          latest=${{ github.event_name == 'release' }}
        tags: |
          type=match,pattern=v\d.\d.\d,enable=${{ github.event_name == 'release' }}
          type=match,pattern=v(\d.\d.\d),enable=${{ github.event_name == 'release' }},group=1
          type=match,pattern=v(\d.\d)\d,enable=${{ github.event_name == 'release' }},group=1
          type=match,pattern=v(\d).\d\d,group=1,enable=${{ !startsWith(github.ref, 'refs/tags/v0.') && github.event_name == 'release' }}
          type=sha,event=push,value={{sha}},format=long,enable=${{ github.event_name != 'release' }}
        labels: |
          org.opencontainers.image.licenses=AGPLv3
          org.opencontainers.image.source=https://github.com/${{ github.repository }}/tree/${{ github.sha }}
    -
      name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    -
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    -
      name: Login to GitHub Container Registry
      # If we publish an sha tag for every push, and a semver tag for every release, we shouldn't
      # publish anything on a PR. But we still want to build, to verify the PR content is okay.
      if: ${{ github.event_name != 'pull_request' }}
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
    -
      name: Build and push
      id: docker_build
      uses: docker/build-push-action@v2.2.1
      with:
        push: ${{ github.event_name == 'release' }}
        tags: ${{ steps.docker_meta.outputs.tags }}
        labels: ${{ steps.docker_meta.outputs.labels }}
    -
      name: Image digest
      run: echo ${{ steps.docker_build.outputs.digest }}
